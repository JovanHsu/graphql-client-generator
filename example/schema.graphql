type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post!]
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  createdAt: String!
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

input CreateUserInput {
  name: String!
  email: String!
  age: Int
}

input CreatePostInput {
  title: String!
  content: String!
  authorId: ID!
  status: PostStatus!
}

type Query {
  users: [User!]!
  user(id: ID!): User
  posts: [Post!]!
  post(id: ID!): Post
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  createPost(input: CreatePostInput!): Post!
  updatePost(id: ID!, input: CreatePostInput!): Post!
  deletePost(id: ID!): Boolean!
}

type Subscription {
  onPostCreated: Post!
  onPostUpdated: Post!
}